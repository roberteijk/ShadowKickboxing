CREATE TABLE body_part (
    body_part_id INT PRIMARY KEY,
    name VARCHAR(20)
);

INSERT INTO body_part VALUES (1, 'left arm');
INSERT INTO body_part VALUES (2, 'right arm');
INSERT INTO body_part VALUES (3, 'both arms');
INSERT INTO body_part VALUES (4, 'left leg');
INSERT INTO body_part VALUES (5, 'right leg');
INSERT INTO body_part VALUES (6, 'both legs');
INSERT INTO body_part VALUES (7, 'body');
INSERT INTO body_part VALUES (8, 'head');

# ---
# ---
# ---

CREATE TABLE body_parts_delay (
    body_part_id_1 INT,
    body_part_id_2 INT,
    min_delay_millis INT,
    PRIMARY KEY (body_part_id_1, body_part_id_2),
    FOREIGN KEY (body_part_id_1) REFERENCES body_part(body_part_id) ON DELETE CASCADE,
    FOREIGN KEY (body_part_id_2) REFERENCES body_part(body_part_id) ON DELETE CASCADE
);

INSERT INTO body_parts_delay VALUES (4, 5, 500);
INSERT INTO body_parts_delay VALUES (5, 4, 500);

# ---
# ---
# ---

CREATE TABLE height (
    height_id INT PRIMARY KEY,
    name VARCHAR(20)
);

INSERT INTO height VALUES (1, 'high');
INSERT INTO height VALUES (2, 'middle');
INSERT INTO height VALUES (3, 'low');

# ---
# ---
# ---

CREATE TABLE offensive_move (
    move_id INT PRIMARY KEY,
    name VARCHAR(40),
    body_part INT,
    height INT,
    min_execution_millis INT,
        FOREIGN KEY (body_part) REFERENCES body_part(body_part_id) ON DELETE CASCADE,
    FOREIGN KEY (height) REFERENCES height(height_id) ON DELETE CASCADE
);

INSERT INTO offensive_move VALUES (1, 'jab', 1, 1, 250);
INSERT INTO offensive_move VALUES (2, 'double jab', 1, 1, 400);
INSERT INTO offensive_move VALUES (3, 'cross', 2, 1, 300);
INSERT INTO offensive_move VALUES (4, 'left hook head', 1, 1, 500);
INSERT INTO offensive_move VALUES (5, 'right hook head', 2, 1, 500);
INSERT INTO offensive_move VALUES (6, 'left uppercut', 1, 1, 500);
INSERT INTO offensive_move VALUES (7, 'right uppercut', 2, 1, 500);
INSERT INTO offensive_move VALUES (8, 'left hook body', 1, 2, 500);
INSERT INTO offensive_move VALUES (9, 'right hook body', 2, 2, 500);
# TODO Complete move seed.

# ---
# ---
# ---

CREATE TABLE language (
    language_id INT PRIMARY KEY,
    name VARCHAR(20)
);

INSERT INTO language VALUES (1, 'English');

# ---
# ---
# ---

CREATE TABLE rule_set (
    rule_set_id INT PRIMARY KEY,
    name VARCHAR(40)
);

INSERT INTO rule_set VALUES (1, 'Glory Kickboxing');

# ---
# ---
# ---

CREATE TABLE combo (
    combo_id INT PRIMARY KEY,
    name VARCHAR(40),
    call_frequency_weight DECIMAL(4,3) CHECK (call_frequency_weight <= 1 AND call_frequency_weight > 0),
    timing_multiplier DECIMAL(4,2) DEFAULT 1.0
);

# ---
# ---
# ---

CREATE TABLE combo_rule_set (
    combo_id INT,
    rule_set_id INT,
    PRIMARY KEY (combo_id, rule_set_id),
    FOREIGN KEY (combo_id) REFERENCES  combo(combo_id) ON DELETE CASCADE,
    FOREIGN KEY (rule_set_id) REFERENCES rule_set(rule_set_id) ON DELETE CASCADE
);

# ---
# ---
# ---

CREATE TABLE combo_move (
    combo_id INT,
    move_id INT,
    sequence_index INT,
    PRIMARY KEY (combo_id, move_id, sequence_index),
    FOREIGN KEY (combo_id) REFERENCES combo(combo_id) ON DELETE CASCADE,
    FOREIGN KEY (move_id) REFERENCES  offensive_move(move_id) ON DELETE CASCADE
);

INSERT INTO combo(combo_id, name, call_frequency_weight) VALUES (1, 'jab', 1);
INSERT INTO combo_rule_set VALUES (1, 1);
INSERT INTO combo_move VALUES (1, 1, 0);

INSERT INTO combo(combo_id, name, call_frequency_weight) VALUES (2, 'double jab', 1);
INSERT INTO combo_rule_set VALUES (2, 1);
INSERT INTO combo_move VALUES (2, 2, 0);

INSERT INTO combo(combo_id, name, call_frequency_weight) VALUES (3, 'cross', 0.80);
INSERT INTO combo_rule_set VALUES (3, 1);
INSERT INTO combo_move VALUES (3, 3, 0);

INSERT INTO combo(combo_id, name, call_frequency_weight) VALUES (4, 'left hook head', 0.5);
INSERT INTO combo_rule_set VALUES (4, 1);
INSERT INTO combo_move VALUES (4, 4, 0);

INSERT INTO combo(combo_id, name, call_frequency_weight) VALUES (5, 'right hook head', 0.5);
INSERT INTO combo_rule_set VALUES (5, 1);
INSERT INTO combo_move VALUES (5, 5, 0);

INSERT INTO combo(combo_id, name, call_frequency_weight) VALUES (6, 'left uppercut', 0.5);
INSERT INTO combo_rule_set VALUES (6, 1);
INSERT INTO combo_move VALUES (6, 6, 0);

INSERT INTO combo(combo_id, name, call_frequency_weight) VALUES (7, 'right uppercut', 0.35);
INSERT INTO combo_rule_set VALUES (7, 1);
INSERT INTO combo_move VALUES (7, 7, 0);

INSERT INTO combo(combo_id, name, call_frequency_weight) VALUES (8, 'left hook body', 0.35);
INSERT INTO combo_rule_set VALUES (8, 1);
INSERT INTO combo_move VALUES (8, 8, 0);

INSERT INTO combo(combo_id, name, call_frequency_weight) VALUES (9, 'right hook body', 0.15);
INSERT INTO combo_rule_set VALUES (9, 1);
INSERT INTO combo_move VALUES (9, 9, 0);

INSERT INTO combo(combo_id, name, call_frequency_weight) VALUES (1001, 'double jab + cross', 1);
INSERT INTO combo_rule_set VALUES (1001, 1);
INSERT INTO combo_move VALUES (1001, 2, 0);
INSERT INTO combo_move VALUES (1001, 3, 1);
# TODO Complete combo seed.

# ---
# ---
# ---

CREATE TABLE audio (
    move_id INT,
    language_id INT,
    audio_fragment BLOB,
    PRIMARY KEY (move_id, language_id),
    FOREIGN KEY (move_id) REFERENCES offensive_move(move_id) ON DELETE CASCADE,
    FOREIGN KEY (language_id) REFERENCES language(language_id) ON DELETE CASCADE
);

# ---
# ---
# ---

CREATE TABLE fight (
    fight_id INT PRIMARY KEY AUTO_INCREMENT,
    rule_set INT,
    number_rounds INT,
    round_length_millis INT,
    rest_length_millis INT,
    audio_fragment BLOB
);

CREATE TABLE fight_combo (
    fight_id INT,
    combo_id INT,
    PRIMARY KEY (fight_id, combo_id),
    FOREIGN KEY (fight_id) REFERENCES fight(fight_id) ON DELETE CASCADE,
    FOREIGN KEY (combo_id) REFERENCES combo(combo_id) ON DELETE CASCADE
);

CREATE TABLE fight_distribution (
    fight_id INT,
    ip_distributed INT,
    time_stamp_distribution TIMESTAMP,
    PRIMARY KEY (fight_id, ip_distributed),
    FOREIGN KEY (fight_id) REFERENCES fight(fight_id) ON DELETE CASCADE
);